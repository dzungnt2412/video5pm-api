---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.app.namespace | default "default" }}
  name: {{ .Values.app.name }}
  labels:
    env: {{ .Values.app.env }}
    name: {{ .Values.app.name }}
    type: {{ .Values.app.type }}
spec:
  selector:
    matchLabels:
      env: {{ .Values.app.env }}
      name: {{ .Values.app.name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 40%
  progressDeadlineSeconds: 300
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        env: {{ .Values.app.env }}
        name: {{ .Values.app.name }}
        type: {{ .Values.app.type }}
    spec:
      containers:
        - name: {{ .Values.app.name }}
          image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          {{- if .Values.app.port }}
          ports:
            - containerPort: {{ .Values.app.port }}
          {{- end }}
          args: ['-config-type=remote -config-remote-address={{ index .Values "config" "remote-address"}} -config-remote-keys={{ index .Values "config" "remote-keys" }}']
        {{- if (or (gt (.Values.app.mem_limit | default 0.0) 0.0) (gt (.Values.app.cpu_limit | default 0.0) 0.0)) }}
          resources:
            limits:
              {{- if (gt (.Values.app.cpu_limit | default 0.0) 0.0) }}
              cpu: {{.Values.app.cpu_limit}}m
              {{- end }}
              {{- if (gt (.Values.app.mem_limit | default 0.0) 0.0) }}
              memory: {{.Values.app.mem_limit}}Mi
              {{- end }}
            requests:
              {{- if (gt (.Values.app.cpu_required | default 0.0) 0.0) }}
              cpu: {{.Values.app.cpu_required}}m
              {{- end }}
              {{- if (gt (.Values.app.mem_required | default 0.0) 0.0) }}
              memory: {{.Values.app.mem_required}}Mi
              {{- end }}
        {{- end }}
      imagePullSecrets:
        - name: registry
      nodeSelector:
          kubernetes.io/hostname: k8s-node1
